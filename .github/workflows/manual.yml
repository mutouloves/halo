name: Manual # 手动触发

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/actions/setup-env
      - name: Reset version of Halo
        if: github.event_name == 'release'
        shell: bash
        run: |
          # Set the version with tag name when releasing
          version=${{ github.event.release.tag_name }}
          version=${version#v}
          sed -i "s/version=.*-SNAPSHOT$/version=$version/1" gradle.properties
      - name: Build Halo
        run: ./gradlew clean && ./gradlew downloadPluginPresets && ./gradlew build -x check
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs
          retention-days: 1

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs

      - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      if: inputs.dockerhub-token != '' && github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        dockerhub-user: ${{ secrets.DOCKERHUB_USER }}
        dockerhub-token: ${{ secrets.DOCKERHUB_PASS }}

    - name: 确定 Docker 标签
        id: vars
        shell: bash
        run: |
          # 由 github.ref 确定我们要构建的标签
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "DOCKER_TAG=${GITHUB_REF#refs/*/}" | tee -a "${GITHUB_OUTPUT}"
          elif [[ "${{ github.ref }}" == refs/heads/* ]]; then
            echo "DOCKER_TAG=1.0" | tee -a "${GITHUB_OUTPUT}"
          fi

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        image-name: halo
        push: true
        platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
            mutouloves/halo:latest
            mutouloves/halo:${{steps.vars.outputs.DOCKER_TAG}}
